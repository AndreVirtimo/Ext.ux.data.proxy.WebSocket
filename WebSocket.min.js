Ext.define("Ext.ux.data.proxy.WebSocket",{extend:"Ext.data.proxy.Proxy",alias:"proxy.websocket",requires:["Ext.ux.WebSocket"],callbacks:{},config:{storeId:"",api:{create:"create",read:"read",update:"update",destroy:"destroy"},url:"",protocol:null,websocket:null,autoReconnect:true,autoReconnectInterval:5e3},constructor:function(e){var t=this;if(Ext.isEmpty(e)){Ext.Error.raise("A configuration is needed!");return false}t.initConfig(e);t.mixins.observable.constructor.call(t,e);if(Ext.isEmpty(t.getStoreId())){Ext.Error.raise("The storeId field is needed!");return false}if(Ext.isEmpty(t.getWebsocket())){t.setWebsocket(Ext.create("Ext.ux.WebSocket",{url:t.getUrl(),protocol:t.getProtocol(),communicationType:"event",autoReconnect:t.getAutoReconnect(),autoReconnectInterval:t.getAutoReconnectInterval()}))}var n=t.getWebsocket();if(n.getCommunicationType()!=="event"){Ext.Error.raise("Ext.ux.WebSocket must use event communication type (set communicationType to event)!");return false}n.on(t.getApi().create,function(e,n){t.completeTask("create",t.getApi().create,n)});n.on(t.getApi().read,function(e,n){t.completeTask("read",t.getApi().read,n)});n.on(t.getApi().update,function(e,n){t.completeTask("update",t.getApi().update,n)});n.on(t.getApi().destroy,function(e,n){t.completeTask("destroy",t.getApi().destroy,n)});return t},create:function(e,t,n){this.runTask(this.getApi().create,e,t,n)},read:function(e,t,n){this.runTask(this.getApi().read,e,t,n)},update:function(e,t,n){this.runTask(this.getApi().update,e,t,n)},destroy:function(e,t,n){this.runTask(this.getApi().destroy,e,t,n)},runTask:function(e,t,n,r){var i=this,s={},o=i.getWebsocket(),u=0;r=r||i;i.callbacks[e]={operation:t,callback:n,scope:r};if(e===i.getApi().read){var a=t.sorters,f=t.groupers;if(a.length>0){s.sort=[];for(u=0;u<a.length;u++){s.sort.push({property:a[u].property,direction:a[u].direction})}}if(f.length>0){s.group=[];for(u=0;u<f.length;u++){s.group.push({property:f[u].property,direction:f[u].direction})}}s.page=t.page;s.limit=t.limit;s.start=t.start}else{s=[];for(u=0;u<t.records.length;u++){s.push(t.records[u].data)}}o.send(e,s)},completeTask:function(e,t,n){var r=this,i=r.getReader().read(n);if(Ext.isEmpty(r.callbacks[t])){var s=Ext.StoreManager.lookup(r.getStoreId());if(typeof s==="undefined"){Ext.Error.raise("Unrecognized store: check if the storeId passed into configuration is right.");return false}if(t==="destroy"){s.remove(i.records)}else{s.loadData(i.records,true);s.fireEvent("load",s)}}else{var o=r.callbacks[t],u=o.operation,a=u.records||n;delete r.callbacks[t];if(typeof u.setResultSet==="function")u.setResultSet(i);else u.resultSet=i;u.scope=o.scope;u.setCompleted();u.setSuccessful();o.callback.apply(o.scope,[u])}}})
